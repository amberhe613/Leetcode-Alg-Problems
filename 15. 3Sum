/**
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.
Note:
The solution set must not contain duplicate triplets.
**/

public List<List<Integer>> threeSum(int[] nums) {
	List<List<Integer>> res = new ArrayList<>();
	// Check coner case
	if (nums == null || nums.length < 3) {
		return res;
	}
	Arrays.sort(nums);
	for (int i = 0; i < nums.length - 2; i++) {
		// no duplicate
		if (i > 0 && nums[i] == nums[i - 1]) {
			continue;
		}
		// two pointers 
		int left = i + 1, right = nums.length - 1;
		int sum = -1 * nums[i];
		while (left < right) {
			if (nums[left] + nums[right] == sum) {
				res.add(Arrays.asList(nums[i], nums[left], nums[right]));
				left++;
				while (left < right && nums[left] == nums[left - 1]) {
					left++;
				}
				right--;
				while (right > left && nums[right] == nums[right + 1]) {
					right--;
				}
			} else if (nums[left] + nums[right] < sum) {
				left++;
				while (left < right && nums[left] == nums[left - 1]) {
					left++;
				}
			} else {
				right--;
				while (right > left && nums[right] == nums[right + 1]) {
					right--;
				}                    
			}
		}
	}
	return res;
}
